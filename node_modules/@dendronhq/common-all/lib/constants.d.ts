export { ReasonPhrases, StatusCodes, getReasonPhrase, getStatusCode, } from "http-status-codes";
export declare enum ThemeType {
    LIGHT = "LIGHT",
    DARK = "DARK"
}
export declare enum ThemeTarget {
    PRISM = "PRISM"
}
export declare const CONSTANTS: {
    ROOT_PATH: string;
    ALL_QUERY: string;
    DENDRON_WS_NAME: string;
    DENDRON_SERVER_PORT: string;
    DENDRON_WS_META: string;
    DENDRON_CONFIG_FILE: string;
    DENDRON_SEED_CONFIG: string;
    DENDRON_DELIMETER: string;
    DENDRON_USER_FILE: string;
    DENDRON_CACHE_FILE: string;
    DENDRON_ID: string;
    DENDRON_NO_TELEMETRY: string;
    DENDRON_TELEMETRY: string;
    DENDRON_HOOKS_BASE: string;
    DENDRON_LOCAL_SITE_PORT: number;
    /**
     * Initial version for first installaion
     */
    DENDRON_INIT_VERSION: string;
    /** Default for the `maxNoteLength` config. */
    DENDRON_DEFAULT_MAX_NOTE_LENGTH: number;
};
export declare enum ERROR_STATUS {
    NODE_EXISTS = "node_exists",
    NO_SCHEMA_FOUND = "no_schema_found",
    NO_ROOT_SCHEMA_FOUND = "no_root_schema_found",
    MISSING_SCHEMA = "missing_schema",
    NO_ROOT_NOTE_FOUND = "no_root_note_found",
    BAD_PARSE_FOR_SCHEMA = "bad_parse_for_schema",
    NO_PARENT_FOR_NOTE = "no_parent_for_note",
    CANT_DELETE_ROOT = "no_delete_root_node",
    BAD_PARSE_FOR_NOTE = "bad_parse_for_note",
    ENGINE_NOT_SET = "no_engine_set",
    NOT_AUTHORIZED = "not_authorized",
    DOES_NOT_EXIST = "does_not_exist_error",
    INVALID_CONFIG = "invalid_config",
    INVALID_STATE = "invalid_state",
    UNKNOWN = "unknown"
}
/**
 * Labels whether error is recoverable or not
 */
export declare enum ERROR_SEVERITY {
    MINOR = "minor",
    FATAL = "fatal"
}
export declare enum RESERVED_KEYS {
    GIT_NOTE_PATH = "gitNotePath",
    GIT_NO_LINK = "gitNoLink"
}
export declare const TAGS_HIERARCHY_BASE = "tags";
/** Notes under this hierarchy are considered tags, for example `${TAGS_HIERARCHY}foo` is a tag note. */
export declare const TAGS_HIERARCHY: string;
export declare const USERS_HIERARCHY_BASE = "user";
/** Notes under this hierarchy are considered users, for example `${USERS_HIERARCHY}Hamilton` is a user note. */
export declare const USERS_HIERARCHY: string;
