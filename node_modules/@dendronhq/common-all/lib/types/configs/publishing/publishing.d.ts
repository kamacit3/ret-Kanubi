import { DVault } from "../../workspace";
import { GithubConfig } from "./github";
import { SEOConfig } from "./seo";
/**
 * Namespace for all publishing related configurations
 */
export declare type DendronPublishingConfig = {
    enableFMTitle?: boolean;
    enableHierarchyDisplay?: boolean;
    hierarchyDisplayTitle?: string;
    enableNoteTitleForLink?: boolean;
    enableMermaid?: boolean;
    enableNunjucks?: boolean;
    enablePrettyRefs?: boolean;
    enableKatex?: boolean;
    assetsPrefix?: string;
    copyAssets: boolean;
    canonicalBaseUrl?: string;
    customHeaderPath?: string;
    ga?: GoogleAnalyticsConfig;
    logoPath?: string;
    siteFaviconPath?: string;
    siteIndex?: string;
    siteHierarchies: string[];
    enableSiteLastModified: boolean;
    siteRootDir: string;
    siteRepoDir?: string;
    siteUrl?: string;
    enableFrontmatterTags: boolean;
    enableRandomlyColoredTags?: boolean;
    hierarchy?: {
        [key: string]: HierarchyConfig;
    };
    duplicateNoteBehavior?: DuplicateNoteBehavior;
    writeStubs: boolean;
    seo: SEOConfig;
    github: GithubConfig;
    enableContainers: boolean;
    generateChangelog: boolean;
    previewPort?: number;
    segmentKey?: string;
    cognitoUserPoolId?: string;
    cognitoClientId?: string;
    enablePrettyLinks: boolean;
};
export declare enum DuplicateNoteActionEnum {
    useVault = "useVault"
}
export declare type DuplicateNoteAction = keyof typeof DuplicateNoteActionEnum;
export declare type UseVaultBehaviorPayload = {
    vault: DVault;
} | string[];
export declare type DuplicateNoteActionPayload = UseVaultBehaviorPayload;
export declare type DuplicateNoteBehavior = {
    action: DuplicateNoteAction;
    payload: DuplicateNoteActionPayload;
};
export declare type HierarchyConfig = {
    publishByDefault?: boolean | {
        [key: string]: boolean;
    };
    noindexByDefault?: boolean;
    customFrontmatter?: CustomFMEntry[];
};
export declare type CustomFMEntry = {
    key: string;
    value: any;
};
export declare type GoogleAnalyticsConfig = {
    tracking?: string;
};
/**
 * Generate default {@link DendronPublishingConfig}
 * @returns DendronPublishingConfig
 */
export declare function genDefaultPublishingConfig(): DendronPublishingConfig;
