"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataService = void 0;
const common_all_1 = require("@dendronhq/common-all");
const fs_extra_1 = __importDefault(require("fs-extra"));
const os_1 = __importDefault(require("os"));
const path_1 = __importDefault(require("path"));
let _singleton;
class MetadataService {
    static instance() {
        if (!_singleton) {
            _singleton = new MetadataService();
        }
        return _singleton;
    }
    static metaFilePath() {
        return path_1.default.join(os_1.default.homedir(), ".dendron", "meta.json");
    }
    getMeta() {
        const metaPath = MetadataService.metaFilePath();
        if (!fs_extra_1.default.pathExistsSync(metaPath)) {
            fs_extra_1.default.ensureFileSync(metaPath);
            fs_extra_1.default.writeJSONSync(metaPath, {});
            return {};
        }
        return fs_extra_1.default.readJSONSync(MetadataService.metaFilePath());
    }
    setMeta(key, value) {
        const stateFromFile = this.getMeta();
        stateFromFile[key] = value;
        fs_extra_1.default.writeJSONSync(MetadataService.metaFilePath(), stateFromFile, {
            spaces: 4,
        });
    }
    setInitialInstall() {
        return this.setMeta("firstInstall", common_all_1.Time.now().toSeconds());
    }
    setFirstWsInitialize() {
        return this.setMeta("firstWsInitialize", common_all_1.Time.now().toSeconds());
    }
    setLapsedUserMsgSendTime() {
        return this.setMeta("lapsedUserMsgSendTime", common_all_1.Time.now().toSeconds());
    }
    setDendronWorkspaceActivated() {
        return this.setMeta("dendronWorkspaceActivated", common_all_1.Time.now().toSeconds());
    }
}
exports.MetadataService = MetadataService;
//# sourceMappingURL=service.js.map