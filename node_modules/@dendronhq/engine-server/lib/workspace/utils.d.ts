import { IntermediateDendronConfig, DVault, DWorkspaceV2, NoteProps, WorkspaceFolderCode, WorkspaceOpts, WorkspaceType } from "@dendronhq/common-all";
import { URI } from "vscode-uri";
export declare class WorkspaceUtils {
    /** Finds the workspace type using the VSCode plugin workspace variables. */
    static getWorkspaceType({ workspaceFolders, workspaceFile, }: {
        workspaceFolders?: readonly WorkspaceFolderCode[];
        workspaceFile?: URI;
    }): WorkspaceType;
    /** Finds the workspace type by analyzing the given directory. Use if plugin is not available. */
    static getWorkspaceTypeFromDir(dir: string): WorkspaceType;
    /**
     * Find wsRoot if exists
     * @returns
     */
    static findWSRoot(): string | undefined;
    static findWSRootInWorkspaceFolders(workspaceFolders: readonly WorkspaceFolderCode[]): WorkspaceFolderCode | undefined;
    static isNativeWorkspace(workspace: DWorkspaceV2): boolean;
    /**
     * Check if path is in workspace
     * @returns
     */
    static isPathInWorkspace({ wsRoot, vaults, fpath, }: {
        fpath: string;
    } & WorkspaceOpts): boolean;
    /**
     * Return true if contents of note is different from engine
     * @param param0
     * @returns
     */
    static noteContentChanged({ content, note, }: {
        content: string;
        note: NoteProps;
    }): boolean;
    /**
     * Generate url for given note or return `undefined` if no url is specified
     * @param opts
     *
     */
    static getNoteUrl(opts: {
        config: IntermediateDendronConfig;
        note: NoteProps;
        vault: DVault;
        urlRoot?: string;
        anchor?: string;
    }): string;
}
