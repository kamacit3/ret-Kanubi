import { DEngineClient, DLink, NoteProps } from "@dendronhq/common-all";
import { createLogger } from "@dendronhq/common-server";
export declare enum DoctorActionsEnum {
    FIX_FRONTMATTER = "fixFrontmatter",
    H1_TO_TITLE = "h1ToTitle",
    HI_TO_H2 = "h1ToH2",
    REMOVE_STUBS = "removeStubs",
    CREATE_MISSING_LINKED_NOTES = "createMissingLinkedNotes",
    REGENERATE_NOTE_ID = "regenerateNoteId",
    FIND_BROKEN_LINKS = "findBrokenLinks"
}
export declare type DoctorServiceOpts = {
    action: DoctorActionsEnum;
    query?: string;
    candidates?: NoteProps[];
    limit?: number;
    dryRun?: boolean;
    exit?: boolean;
    quiet?: boolean;
    engine: DEngineClient;
};
export declare class DoctorService {
    L: ReturnType<typeof createLogger>;
    constructor();
    findBrokenLinks(note: NoteProps, notes: NoteProps[], engine: DEngineClient): DLink[];
    getBrokenLinkDestinations(notes: NoteProps[], engine: DEngineClient): NoteProps[];
    executeDoctorActions(opts: DoctorServiceOpts): Promise<{
        exit: boolean;
        resp?: undefined;
    } | {
        exit: boolean;
        resp: any;
    }>;
}
