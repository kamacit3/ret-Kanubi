"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DoctorCLICommand = void 0;
const engine_server_1 = require("@dendronhq/engine-server");
const base_1 = require("./base");
const utils_1 = require("./utils");
class DoctorCLICommand extends base_1.CLICommand {
    constructor() {
        super({ name: "doctor", desc: "doctor helps you fix your notes" });
    }
    buildArgs(args) {
        super.buildArgs(args);
        (0, utils_1.setupEngineArgs)(args);
        args.option("action", {
            describe: "what action the doctor should take",
            type: "string",
            requiresArg: true,
            choices: Object.values(engine_server_1.DoctorActionsEnum),
        });
        args.option("query", {
            describe: "run doctor over a query",
            type: "string",
        });
        args.option("limit", {
            describe: "limit num changes",
            type: "number",
        });
        args.option("dryRun", {
            describe: "dry run",
            type: "boolean",
        });
    }
    async enrichArgs(args) {
        this.addArgsToPayload({ action: args.action });
        const engineArgs = await (0, utils_1.setupEngine)(args);
        return { data: { ...args, ...engineArgs } };
    }
    async execute(opts) {
        const ds = new engine_server_1.DoctorService();
        return ds.executeDoctorActions(opts);
    }
}
exports.DoctorCLICommand = DoctorCLICommand;
//# sourceMappingURL=doctor.js.map