import { LegacyLookupSelectionType, NoteProps } from "../..";
import { JournalConfig } from "./journal";
/**
 * Namespace for configuring scratch note behavior
 */
export declare type TaskConfig = Pick<JournalConfig, "name" | "dateFormat" | "addBehavior"> & {
    /** Maps each status to a symbol, word, or sentence. This will be displayed for the task. */
    statusSymbols: {
        [status: string]: string;
    };
    /** Maps each priority to a symbol, word, or sentence. This will be displayed for the task. */
    prioritySymbols: {
        [status: string]: string;
    };
    /** Add a "TODO: <note title>" entry to the frontmatter of task notes. This can simplify integration with various Todo extensions like Todo Tree. */
    todoIntegration: boolean;
    /** The default selection type to use in Create Task Note command. */
    createTaskSelectionType: LegacyLookupSelectionType;
};
/**
 * Generates default {@link ScratchConfig}
 * @returns ScratchConfig
 */
export declare function genDefaultTaskConfig(): TaskConfig;
export declare type TaskNoteProps = {
    custom: {
        status?: string;
        due?: string;
        owner?: string;
        priority?: string;
        TODO?: string;
        DONE?: string;
    };
};
export declare class TaskNoteUtils {
    static isTaskNote(note: NoteProps): note is NoteProps & TaskNoteProps;
    static genDefaultTaskNoteProps(note: NoteProps, config: TaskConfig): TaskNoteProps;
    static getStatusSymbol({ note, taskConfig, }: {
        note: TaskNoteProps;
        taskConfig: TaskConfig;
    }): string | undefined;
    static getPrioritySymbol({ note, taskConfig, }: {
        note: TaskNoteProps;
        taskConfig: TaskConfig;
    }): string | undefined;
}
